
#TODO: This platform is intended to be supported by two vertical ropes,
#one holding up each side. However the ropes have some measure of give,
#and when the player walks to one side of the platform it tilts in that
#direction and they'll eventually fall off it.
{
id: "tilting_platform_dungeon",
platform_area: [0,0,80,1],
properties: {
	tilt_angle: "if(target_angle < -20, -20, if(target_angle > 20, 20, target_angle)) where target_angle = level.player.ctrl_tilt/10",
	player_weight: "if(level.player.standing_on != me, 0, if(level.player.midpoint_x < me.midpoint_x, -1, 1)*sqrt(abs(level.player.midpoint_x - me.midpoint_x))*0.1)",
	regression_force: "if(_tilt_angle > 0.0, 1.0, -1.0)*min(force, abs(_tilt_angle)) where force = 0.5",
	material_sound: "'metal'",

#-------------------------- vars --------------------------#
	_tilt_angle: { type: "decimal", editor_info: { type: "decimal", value: "0.0" } },
	_control_points: { type: "[[decimal,decimal]]", default: [], editor_info: { type: "points" } },

},
editor_info: {
	category: "platforms",
},
on_process: "[
	   if(_control_points and size(_control_points) >= 2,
		([
			set(midpoint_x, (this_node[0]*this_portion + next_node[0]*next_portion)/100),
			set(midpoint_y, (this_node[1]*this_portion + next_node[1]*next_portion)/100)
	    ] where this_node = _control_points[index],
		        next_node = _control_points[(index+1)%size(_control_points)],
				this_portion = 100 - cycle%100,
				next_portion = cycle%100)
		            where index = (cycle/100)%size(_control_points)),

	   add(_tilt_angle, player_weight - regression_force),

	   #make Frogatto slip off the platform if it tilts too much -- TODO:
	    should we have a more general slipping mechanic in the game?#
	   if(level.player.standing_on = me and abs(_tilt_angle) > 30, add(level.player.velocity_x, (_tilt_angle - 30*if(_tilt_angle > 0, 1, -1))*6.0)),
	   
	   set(platform_area, [lib.math.round(80 - 80*cos(angle)), 17, lib.math.round(80 + 80*cos(angle))]),
	   set(rotate, angle),
	   set(platform_offsets, [lib.math.round(-160*sin(angle)), lib.math.round(160*sin(angle))])
	   ] where angle = _tilt_angle",
animation: {
	id: "normal",
	no_remove_alpha_borders: true,
	image: "experimental/crazy-platform.png",
	x: 0,
	y: 0,
	w: 160,
	h: 32,
	duration: 10000,
},
}
