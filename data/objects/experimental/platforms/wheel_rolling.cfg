{
id: "wheel_rolling",
properties: {
#-------------------------- const settings --------------------------#
	inertia: "400.5",
	max_speed: "3",
	x_per_degree: "90",
	_platform_count: "3",
	radius: "midpoint_y-y -10",

	platform_pos: "def(decimal angle) -> {x: decimal, y: decimal} {x: sin(angle)*radius, y: cos(angle)*radius}",
	
#-------------------------- vars --------------------------#
	_rotation_speed: { type:"decimal",  default: 0 },
	
	
#-------------------------- editor settings --------------------------#
	_left_x: { type:"int", editor_info: { type: "y", value: "mid_y" }, init: "mid_y" },
	_right_x: { type:"int", editor_info: { type: "y", value: "mid_y" }, init: "mid_y" },
	
	
#-------------------------- managed objects --------------------------#
	left_rope: { type: "obj rope_angled_controller", init: "object('rope_angled_controller', x+10, mid_y, {facing: facing, zsub_order: -1})" },
	right_rope: { type: "obj rope_angled_controller", init: "object('rope_angled_controller', x+img_w-10, mid_y, {facing: facing, zsub_order: -1})" },
	_ropes: "[obj rope_angled_controller] :: [left_rope, right_rope]",
	_backface: { type: "obj wheel_rolling.backface", init: "object('wheel_rolling.backface', mid_x-10, mid_y-4, {facing: facing, zsub_order: -2})" },
	_platforms: { type: "[obj wheel_rolling.rope_platform]", default: [] },
},


on_create: "[
	map(range(_platform_count),	spawn('wheel_rolling.rope_platform',x,y,  {facing: facing, zsub_order: -2, parent: me}, [add(_platforms, [child])]) ),
	add_object(_backface),
	add_object(left_rope),
	add_object(right_rope),
	spawn('wheel_rolling.mount',_left_x,y,facing,  [set(child.zsub_order, -3)]),
	spawn('wheel_rolling.mount',_right_x,y,facing,  [set(child.zsub_order, -3)])
]",


on_process: "[
	set(_rotation_speed, _rotation_speed*0.95),

	#check if the player is on any of our platforms, and then add momentum accordingly#
	map(_platforms,	'platform',
		if(level.player.standing_on = platform,
			set(_rotation_speed, max( -max_speed, min(max_speed, new_speed)))
			
			where new_speed = _rotation_speed*0.98 + (platform.midpoint_x - midpoint_x)/inertia
		)
	),
	
//deal with horizontal momentum
	[
		set(velocity_x, new_speed),
		if(midpoint_x > _right_x, set(velocity_x, min(new_speed, 0))),
		if(midpoint_x < _left_x,  set(velocity_x, max(new_speed, 0)))
	] where new_speed = (_rotation_speed * x_per_degree),  //regardless of whether the player is on our platforms, decay the speed

//do the actual rotation of the wheel and platforms#
	set(rotate, rotate + _rotation_speed),
	[set(_backface.rotate, rotate),	set(_backface.x, x-10)],
	
	map( _platforms, [
		set(_platforms[index].relative_x,  platform_pos(angle).x - _platforms[index].img_w/2),
		set(_platforms[index].relative_y,  platform_pos(angle).y - _platforms[index].img_h/2),
	] where angle = (-rotate + (index*360/_platform_count))%360
	),
	
	left_rope.set_ends(_left_x,y,midpoint_x,midpoint_y+6),
	right_rope.set_ends(_right_x,y,midpoint_x,midpoint_y+6)
	
]",
editor_info: {
	category: "platforms",
	help: "A wheel which rotates when the player jumps on it",
},
animation: {
	image: "props/wooden-wheel.png",
	id: "normal",
	x: 104,
	y: 4,
	w: 80,
	h: 80,
},
object_type: [
	{
		id: "mount",
		zorder: -1,
		next_animation: "'normal'",
		animation: {
			image: "props/forest/log-swing.png",
			id: "normal",
			rect: [64,0,95,31],
		},
	},
	{
		id: "rope_platform",
		platform_area: [20,56,51,57],
		animation: {
			no_remove_alpha_borders: true,
			id: "normal",
			image: "props/rope-platform.png",
			rect: [0,0,63,63],
			frames: 1,
			duration: 1000,
		},
	},
	{
		id: "backface",
		animation: {
			image: "props/wooden-wheel.png",
			id: "normal",
			x: 5,
			y: 4,
			w: 80,
			h: 80,
		},
	},
],
}
