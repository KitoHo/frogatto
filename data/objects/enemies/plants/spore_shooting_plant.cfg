{
id: "spore_shooting_plant",
editor_info: {
	category: "enemies, forest",
},
prototype: ["stationary_vulnerable"],

properties: {
	title: "~Spore Shooting Plant~",
	description: "~Not one of the great office plants.~",
	taste: "~Minty, with a weird undercurrent of bitterness.~",


	last_triggered: { type: "int", init: "-400"  },
	triggered_count: { type: "int", init: "0"  },


	_x_bound: { type: "int", editor_info: { type: "x", value: "mid_x-200" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "mid_x+200" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "mid_y-200" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "mid_y+200" } },
},
on_editor_changed_variable: "[
		if(_y2_bound*up < lim*up, set(_y2_bound, lim)) where lim = y+if(up>0,img_h,0),
		]",
timer_frequency: 11,
on_timer: "if(level.player.midpoint_x > _x_bound and level.player.midpoint_x < _x2_bound  and (level.player.midpoint_y > y and level.player.midpoint_y < _y2_bound or level.player.midpoint_y < y and level.player.midpoint_y > _y2_bound) and cycle - last_triggered > 250,
		add(triggered_count, 1),
		if(triggered_count, fire_event('trigger_attack')))",
on_trigger_attack: "[
		set(triggered_count, 0),
		set(last_triggered,cycle),
		debug(total_steps),
		map(range(total_steps+1), 
			schedule(value/2,[
				set(mass_of_spores.y, step_position),
				set(mass_of_spores.alpha, lib.math.round(sqrt(1-percentage)*256)),
				if(value%cloud_frequency=1, map(spore_clouds, 'spore_cloud', [
					add_object(_spore_cloud),
					set(_spore_cloud.upside_down, self.upside_down),
					set(_spore_cloud.midpoint_y, step_position),
					add(_spore_cloud.x, scl*(img_w/2+cloud_margin)+1d cloud_wobble_x - cloud_wobble_x/2),
					set(_spore_cloud.velocity_rotation, -scl*5*(1-percentage^6)),
					set(_spore_cloud.velocity_x, scl*100*percentage^6),
					map(range(4), schedule(value, set(_spore_cloud.alpha, 50*value))),
					set(_spore_cloud.green, 150),
					map(range(20), schedule(value*5+50, set(_spore_cloud.alpha,  lib.math.round((20-value)*7.5)))),
					schedule(150, remove_object(_spore_cloud)),
					] 	where scl = _spore_cloud.left
						where _spore_cloud = (obj spore_shooting_plant.cloud <- spore_cloud)
						
					) where spore_clouds = map(range(2), object('spore_shooting_plant.cloud', mid_x, mid_y, { facing: if(1d2=1,1,-1), left:[-1,1,0][value]})))
				]) where step_position =  (_y2_bound-64*up)*percentage + y*(1-percentage)
				where percentage = (sqrt(val) where val = value/decimal(total_steps))
			),
		set(mass_of_spores.upside_down, self.upside_down),
		add_object(mass_of_spores),
		] where mass_of_spores = object('spore_shooting_plant.spores', mid_x, mid_y, facing)
		where total_steps = abs(_y2_bound-64*down-y)/step_size
		#v options v#
		where step_size = 10
		where cloud_margin = -15
		where cloud_wobble_x = 20
		where cloud_frequency = 3",
on_end_anim: "animation(animation)",
animation: {
	id: "normal",
	image: "enemies/spore-shooting-plant.png",
	x: 0,
	y: 0,
	w: 32,
	h: 32,
	frames: 4,
	duration: 6,
	pad: -2,
	reverse: true,
},
object_type: [
	{
		id: "spores",
		dies_on_inactive: true,
		on_end_anim: "animation('normal')",
		animation: {
			id: "normal",
			image: "enemies/spore-shooting-plant.png",
			x: 64,
			y: 31,
			w: 64,
			h: 32,
			frames: 1,
			duration: 9582,
		},
	},
	{
		id: "cloud",
		solid_dimensions: ["enemy","common"],
		properties: {
			team: "'neutral'",
			attack_damage: 1,

			velocity_rotation: { type: "decimal", init: "0"  },
			left: { type: "int", init: "0"  },
		},
		on_end_anim: "animation('normal')",
		on_process: "[
			add(rotate, velocity_rotation),
			set(velocity_rotation, velocity_rotation*0.97),
			add(self.y, 0.5*abs(velocity_rotation)),
			if(cycle%2=1, set(velocity_x, velocity_x*0.99)),
			if(cycle%4=3, add(self.x, (1d wander-1)-wander/2)),
			if(cycle%4=1, add(rotate, (1d wander-1)-wander/2)),
			] where wander = 3",
		animation: {
			id: "normal",
			image: "enemies/spore-cloud.png",
			attack_area: [20,20,44,44],
			x: 0,
			y: 0,
			w: 64,
			h: 64,
			frames: 1,
			duration: 9582,
		},
	},
],
}