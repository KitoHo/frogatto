{
id: "dungeon_retracting_bridge",
zorder: -1,
is_strict: true,

on_create: "[
		map(segs, 'seg', add_object(seg)),
		set(segments, segs)
		] where segs = map(map(range(segment_count-1), value + 1), 'itr', object('dungeon_retracting_bridge.segment', midpoint_x, midpoint_y-itr*6, {facing: facing, brightness: 255-itr*15, slot: itr}))",
on_button_pressed: "if(extended = false, [
		map(segments, 'seg', [
			map(range(seg.slot*steps), 'offset', 
				schedule(offset, set(seg.x, ((offset+1)*32*3*if(expand_left,-1,1))/steps+seg.x))
				),
			schedule(seg.slot*steps+20, map(range(max_offset), 'offset', schedule(offset, [
					set(seg.y, seg.y*(1-percent) + self.y*percent),
					set(seg.brightness, lib.math.round( seg.brightness*(1-percent) + 255*percent)),
					] where percent = decimal(offset+1)/decimal(max_offset),
					)) where max_offset = seg.slot*out
					
		)]) where steps = 40 where out = 5,
		set(extended, true)])",
		
editor_info: {
	category: "platforms",
	help: "When triggered, by a switch or pressure plate, this platform
			expands into a proper bridge.
			    segments: The number of segments to expand into.
			    expand_left: Expand left, as opposed to right?",
},
properties: {
	material_sound: "'metal'",

#-------------------------- vars --------------------------#
	segments: { type: "[obj dungeon_retracting_bridge.segment]", default: [] },
	segment_count: { type: "int", editor_info: { type: "int", value: "5" }, default: 5  },
	expand_left: { type: "bool", editor_info: { type: "bool", value: "false" }, default: false  },
	extended: { type: "bool", default: false  },


},
animation: {
	id: "normal",
	image: "props/dungeon-platform.png",
	x: 0,
	y: 0,
	w: 48,
	h: 16,
},
object_type: {
	properties: {
		slot: { type: "int", default: 0  },
		material_sound: "'metal'",
	},
	id: "segment",
	zorder: -1,
	surface_friction: 100,
	platform_area: [0,0,48,1],
	animation: {
		id: "normal",
		image: "props/dungeon-platform.png",
		x: 0,
		y: 0,
		w: 48,
		h: 16,
	},
},
}