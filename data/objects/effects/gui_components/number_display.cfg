//The mana bar displays how much energy for abilities we have.
{
	id: "number_display",
	is_strict: true,
	use_absolute_screen_coordinates: true,
	hidden_in_game: true,
	serializable: false,
	
	zorder: "@include data/zorder.cfg:in_front_of_everything",

	properties: {
		target: "obj player_controlled <- lp asserting lp where lp = level.local_player", //Target object, to have it's information displayed.
		prefix: { type: "string" }, //A prefix for the number displayed; eg, '$' for money. Constant.
		field: { type: "string" }, //Target field in object, target[field] must resolve to an integer value. Could be refactored to do an int|string, though, if needed.

#-------------------------- vars --------------------------#
		align: { type: "string", default: "left" }, // ["left", "center", "right"]
		font: { type: "string", default: "white_outline" },
		size: { type: "int", default: 2 },

		last_displayed_value: { type: "int", default: 0 },
		
		reset_text: "commands :: text(txt, font, size, align) where txt = '${prefix}${int<-target[field]}'",
			//Note: If you came here wondering why Frogatto's 'coins' gui element doesn't display it's $ prefix, it's because it's not a glyph in the current font.
	},
	
	on_create: "reset_text",
	
	on_process: "if(last_displayed_value != (int<-target[field]), [
		set(last_displayed_value, int<-target[field]),
		reset_text
	])",
}




/* PREVIOUSLY, IN score.cfg:
on_process: "[ //Calculate, but do not draw anything yet.
	//// Calculate the score display slowly rolling up or down.
	if(object.vars.score < (level.local_player and level.local_player.score*100 or 0), 
		set(object.vars, 'score', object.vars.score + diff/20 + 1) 
			where diff = (level.local_player and level.local_player.score*100 or 0) - object.vars.score ),
	]",


on_draw: "[
	draw_animation('score_background', 48, 10),
	draw_number(object.vars.score, 7, 52, 14),
]",
*/